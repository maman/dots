# karabaja4's rtorrent example configuration file
# this configuration is written for _secure_ torrent usage, not speed!

# ----------------------------------------------------------------------------------

# Maximum and minimum number of peers to connect to per torrent.
#min_peers = 40
#max_peers = 15

# Same as above but for seeding completed torrents (-1 = same as downloading)
#min_peers_seed = 10
max_peers_seed = 2

# Maximum number of simultanious uploads per torrent.
max_uploads = 1

# Global upload and download rate in KiB. "0" for unlimited.
download_rate = 600
upload_rate = 5

# ----------------------------------------------------------------------------------

# Default directory to save the downloaded files.
directory = /home/kitty/torrentdl/

# Default session directory. Make sure you don't run multiple instance
# of rtorrent using the same session directory. Perhaps using a
# relative path?
session = /home/kitty/.session/

# ----------------------------------------------------------------------------------

# Watch a directory for new torrents, load them but DO NOT start them (annoying!).
# Also erase the torrent file when a torrent is inserted (swallow torrent files).
# This also removes the tie (die ties die die die).
schedule = watch_directory,10,10,load_start=~/Downloads/*.torrent
schedule = tied_directory,10,10,start_tied=
schedule = untied_directory,10,10,close_untied=

# Schedule download rates, maximum between 2AM-10AM (when everybody is asleep :))
#schedule = night_throttle,02:00:00,24:00:00,download_rate=0
#schedule = day_throttle,10:00:00,24:00:00,download_rate=600

# Close torrents when diskspace is low.
schedule = low_diskspace,5,60,close_low_diskspace=100M

# Set incomplete flag on added torrents
system.method.set_key = event.download.inserted_new,set_incomplete_flag_on_insert,d.set_custom1=1

# Erase all data files when a incomplete download is removed (that still has custom1 flag set).
system.method.set_key = event.download.erased,remove_incomplete_remove_data,"branch=d.get_custom1=,\"execute={rm,-rf,--,$d.get_base_path=}\""

# Clear custom1 (remove incomplete flag) when download completes.
system.method.set_key = event.download.finished,clear_incomplete_flag_on_finished,d.set_custom1=

# Add completed torrent name to log file.
# example torrents.sh: "echo $1 >> ~/Downloads/completed.log"
system.method.set_key = event.download.finished,add_completed_to_log,"execute=~/scripts/torrents.sh,$d.get_name="

# Stops the torrent when it's finished (careful, stops seeding!)
system.method.set_key = event.download.finished,stop_when_done,"d.stop=; d.close="

# ----------------------------------------------------------------------------------

# Set the IP filter file, requires full path.
# Remember to replace user with your username!
#ip_filter = /home/user/Downloads/psplist.txt

# Reload IP filter daily
#schedule = filter,18:30:00,24:00:00,reload_ip_filter=

# I'll try to put updated IP filters here as long as I can:
# http://andromeda.kiwilight.com/~dule/ipfilters/

# ----------------------------------------------------------------------------------

# Port range to use for listening.
port_range = 49164-49164

# Check hash for finished torrents. Might be usefull until the bug is
# fixed that causes lack of diskspace not to be properly reported.
check_hash = yes

# Encryption options, set to any combination of the following:
# allow_incoming, try_outgoing, require, require_RC4, enable_retry, prefer_plaintext
# Encryption is a GOOD thing even though it means less peers.
encryption = require,require_RC4,allow_incoming,try_outgoing

# May be set to "disable" (completely disable DHT), "off" (do not start DHT),
# "auto" (start and stop DHT as needed), or "on" (start DHT immediately).
# The default is "off". For DHT to work, a session directory must be defined.
dht = disable

# UDP port to use for DHT.
#dht_port = 6881

# Enable peer exchange (for torrents not marked private)
#peer_exchange = yes
